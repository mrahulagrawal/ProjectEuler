/**
Highly divisible triangular number
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

import java.util.*;

public class ProjectEulerProblem12{
	public static boolean isPrime(long n){
		long root=(long)Math.sqrt(n);
		for(long i=2;i<=root;i++) {
			if(n%i==0) return false;
		}
		return true;
	}
	public static int getFactors(long n){
		if(n==1) return 1;
		int numberOfFactors=1;
		ArrayList<Long> factors=new ArrayList<Long>();
		Long root=(long)Math.sqrt(n);
		for(long i=2;i<=root;i++){
			if(isPrime(i)){
				if(n%i==0){
				     factors.add(i);	
				}
			}
		}
		for(long x : factors){
			int count=0;
			long temp=n;
			while(temp%x==0){
				count++;
				temp=temp/x;
				
			}
			numberOfFactors*=(count+1);
		}
		if (numberOfFactors==1) numberOfFactors+=1;
		return numberOfFactors;
	}
	public static void main(String... st){
		Long time=System.currentTimeMillis();
		Long number=1L;
		for(long n=1;number<Long.MAX_VALUE;n++){
			number=(n*(n+1))/2;
			int factor=getFactors(number);
			if(factor>=500) {
				System.out.println(number);
				System.out.println((System.currentTimeMillis()-time));
				break;
			}
		}
	}
}
/**
 50 factors:
	25200 - number
	16 - time in millisec.
 100 factors:
 	73920 - Number
	99 - time in millisec.
 200 factors: 
 	2031120 - number
 	688 time in millisec	
 400 factors: 
 	17907120 - number
	5328     - time in millisec
 500 factors:
    76576500 - number
	27416    - time in millisec
 *** Result Passed
 	
*/
